<scene version="3.0.0">
	<!-- Use the normal integrator -->
	<integrator type="volpathmis"/>

	<!-- Render the scene as viewed by a perspective camera -->
	<sensor type="perspective">
		<transform name="to_world">
			<lookat target="0, 0.893051, 4.41198" origin="0, 0.919769, 5.41159" up="0, 1, 0"/>
		</transform>

		<!-- Field of view: 30 degrees -->
		<float name="fov" value="27.7856"/>

                <!-- Independent sample generator, user-selected samples per pixel -->
		<sampler type="independent">
		    <integer name="sample_count" value="256"/>
		</sampler>

		<!-- EXR image at HD resolution -->
		<film type="hdrfilm">
		    <!-- 768 x 768 pixels -->
		    <integer name="width" value="800"/>
		    <integer name="height" value="600"/>
		</film>
	</sensor>


	<medium type="homogeneous" id="myMedium">
		<float name="albedo" value="0.2"/>
		<float name="sigma_t" value="2.5"/>
        <phase type="isotropic"/>
	</medium>

	<shape type="cube">
		<transform name="to_world">
			<translate x="1.3374" y="0.9963" z="1.1301"/>
			<scale x="0.3263" y="0.3263" z="0.3263"/>
		</transform>

		<bsdf type="null"/>
	
		<ref name="interior" id="myMedium"/>
	</shape>


	<shape type="obj">
		<string name="filename" value="meshes/walls.obj"/>

		<bsdf type="diffuse">
			<rgb name="reflectance" value="0.725 0.71 0.68"/>
		</bsdf>
	</shape>

	<shape type="obj">
		<string name="filename" value="meshes/rightwall.obj"/>

		<bsdf type="diffuse">
			<rgb name="reflectance" value="0.161 0.133 0.427"/>
		</bsdf>
	</shape>

	<shape type="obj">
		<string name="filename" value="meshes/leftwall.obj"/>

		<bsdf type="diffuse">
			<rgb name="reflectance" value="0.630 0.065 0.05"/>
		</bsdf>
	</shape>

	<shape type="sphere">
		<point name="center" value="-0.421400 0.332100 -0.280000" />
        <float name="radius" value="0.3263" />

        <bsdf type="conductor"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="meshes/light.obj"/>

		<emitter type="area">
			<rgb name="radiance" value="15 15 15"/>
		</emitter>
	</shape>
</scene>